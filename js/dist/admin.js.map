{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,c,MCExDC,GAAAA,aAAiBC,IAAI,oBAAoB,WACzC,ICHA,MAAM,EAA+BJ,OAAOC,KAAKC,OAAO,a,aCExDC,IAAAA,aAAiBC,IAAI,oBAAoB,WACvCD,IAAAA,cAAiB,IACV,oBACJE,gBACC,CACEC,QAAS,qBACTC,MAAOJ,IAAAA,WAAeK,MAAM,mDAC5BC,KAAMN,IAAAA,WAAeK,MAAM,kDAC3BE,KAAM,OAER,IACAC,mBACA,CACEC,KAAM,mBACNL,MAAOJ,IAAAA,WAAeK,MAAM,4CAC5BK,WAAY,0BAEd,OAEN,G","sources":["webpack://@xypp/pay-to-read/webpack/bootstrap","webpack://@xypp/pay-to-read/webpack/runtime/compat get default export","webpack://@xypp/pay-to-read/webpack/runtime/define property getters","webpack://@xypp/pay-to-read/webpack/runtime/hasOwnProperty shorthand","webpack://@xypp/pay-to-read/webpack/runtime/make namespace object","webpack://@xypp/pay-to-read/external root \"flarum.core.compat['common/app']\"","webpack://@xypp/pay-to-read/./src/common/index.ts","webpack://@xypp/pay-to-read/external root \"flarum.core.compat['admin/app']\"","webpack://@xypp/pay-to-read/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('xypp/pay-to-read', () => {\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","import app from 'flarum/admin/app';\n\napp.initializers.add('xypp/pay-to-read', () => {\n  app.extensionData\n    .for('xypp-pay-to-read')\n    .registerSetting(\n      {\n        setting: 'xypp.ptr.max-stack', // This is the key the settings will be saved under in the settings table in the database.\n        label: app.translator.trans('xypp-pay-to-read.admin.settings.max-stack.label'), // The label to be shown letting the admin know what the setting does.\n        help: app.translator.trans('xypp-pay-to-read.admin.settings.max-stack.desc'), // Optional help text where a longer explanation of the setting can go.\n        type: 'int', // What type of setting this is, valid options are: boolean, text (or any other <input> tag type), and select. \n      },\n      30 // Optional: Priority\n    ).registerPermission(\n      {\n        icon: 'fas fa-eye-slash',\n        label: app.translator.trans('xypp-pay-to-read.admin.permission.bypass'),\n        permission: 'post.ptr-bypassPayment',\n      },\n      'view'\n    );\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","registerSetting","setting","label","trans","help","type","registerPermission","icon","permission"],"sourceRoot":""}